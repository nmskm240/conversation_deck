@startuml Conversation deck cards
package Database
{
    abstract DatabaseItem
    {
        -_id:int
        -_name:String
        -_detail:String
        +<<property>>id:int
        +<<property>>name:String
        +<<property>>detail:String
        +deserialize(data:Map<String, dynamic>):DatabaseItem
        +serialize():Map<String, dyanmic>
    }
    abstract DatabaseProvider<T extends DatabaseItem>
    {
        -<<static>>_name:String
        +<<static>>version:int
        +<<static>>table:String
        -<<static>>_database:Database?
        +<<property>>database:Future<Database?>{get only}
        -<<async>>_init():Future<Database>
        +<<async>>restore():Future
        +<<async>>onCreate(db:Database,version:int):Future
        +<<async>>insert(data:T):Future<int?>
        +<<async>>update(data:T):Future<int?>
        +<<async>>delete(id:int):Future<int?>
    }
}
class CardDatabase
{
    -<<static>>_instance:CardDatabase
    +<<property>>instance:CardDatabase{get only}
    -_constructor():CardDatabase
    +<<async>>all():Future<List<TalkCard>?>
}
class Deck
{
    -_name:String
    -_cards:List<TalkCard>
    +<<property>>name:String
    +<<property>>cards:Iterable<TalkCard>
    +draw(count:int):List<TalkCard>
    +shuffle():void
}
class TalkCard
{
    -_talkDetail:TalkDetail
    -_useCount:int
    +use():void
}
class TalkDetail
{
    -_when:DateTime
    -_where:String
    -_who:String
    -_what:String
    -_why:String
    -_how:String
    -_other:String
    +<<property>>when:DateTime
    +<<property>>where:String
    +<<property>>who:String
    +<<property>>what:String
    +<<property>>why:String
    +<<property>>how:String
    +<<property>>other:String
    +toJson():Map<String, dynamic>
    +fromJson(json:Map<String,dyanmic>):TalkDetail
}
enum Time
{
    Today,
    Yestaday,
    ThisWeek,
    ThisMonth,
    ThisYear,
    LastWeek,
    LastMonth,
    LastYear,
    LongAgo,
}
class TimeHelper
{
    +<<static>>getValue(time:Time):String
}

DatabaseProvider --> DatabaseItem
CardDatabase --> TalkCard

CardDatabase -left-|> DatabaseProvider
TalkCard -left-|> DatabaseItem
TimeHelper --> Time :help
TalkDetail --> TimeHelper : use

TalkDetail *-- Time

TalkCard *--> TalkDetail
Deck *--> TalkCard

@enduml